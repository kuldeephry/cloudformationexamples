{
    "Description": "This template deploys an Application Load Balancer that exposes our various ECS services. We create them in a seperate nested template, so it can be referenced by all of the other nested templates.\n",
    "Parameters": {
        "EnvironmentName": {
            "Description": "An environment name that will be prefixed to resource names",
            "Type": "String"
        },
        "VPC": {
            "Type": "String",
            "Description": "Choose which VPC the Application Load Balancer should be deployed to"
        },
        "Subnet1": {
            "Description": "Choose which subnets the Application Load Balancer should be deployed to",
            "Type": "String"
        },
        "Subnet2": {
            "Description": "Choose which subnets the Application Load Balancer should be deployed to",
            "Type": "String"
        },
        "SecurityGroup": {
            "Description": "Select the Security Group to apply to the Application Load Balancer",
            "Type": "String"
        },
        "HealthCheckPath": {
            "Description": "Add a path for the health check if required.",
            "Type": "String"
        },
        "HealthCheckPort": {
            "Description": "Add a port for the health check.",
            "Type": "String"
        }
    },
    "Resources": {
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Ref": "EnvironmentName"
                },
                "Subnets": [
                   { "Ref" : "Subnet1" }, {"Ref" : "Subnet2" }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    }
                ]
            }
        },
        "LoadBalancerListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "LoadBalancer"
                },
                "Port": 80,
                "Protocol": "HTTP",
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "DefaultTargetGroup"
                        }
                    }
                ]
            }
        },
        "DefaultTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${EnvironmentName}-default"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Port": {
                    "Ref": "HealthCheckPort"
                  },
                "Protocol": "HTTP",
                "HealthCheckPath" : {
                    "Ref": "HealthCheckPath"
                }
            }
        }
    },
    "Outputs": {
        "LoadBalancer": {
            "Description": "A reference to the Application Load Balancer",
            "Value": {
                "Ref": "LoadBalancer"
            }
        },
        "LoadBalancerUrl": {
            "Description": "The URL of the ALB",
            "Value": {
                "Fn::GetAtt": [
                    "LoadBalancer",
                    "DNSName"
                ]
            }
        },
        "Listener": {
            "Description": "A reference to a port 80 listener",
            "Value": {
                "Ref": "LoadBalancerListener"
            }
        },
        "TargetGroup":{
            "Description": "A reference to the default Target group",
            "Value": {
              "Ref": "DefaultTargetGroup"
          }
        }
    }
}
